#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <math.h>


	     //打印9*9乘法口诀表
{
	int i = 0;
	int j = 0;
	int k = 0;
	for(i=1;i<10;i++)
	{
		for(j=1;j<=i;j++)
		{
			k=i*j;
		    printf("%d*%d=%-2d ",j,i,k);    //%-2d 就是在打印这个数的时候，打印两位，-是左对齐，不加负号默认右对齐
		}
	printf("\n");
	}

return 0;
}



      //在十个数字中找出最大值
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int max = arr[0]; //最大值,这是一个关键点，不能赋值为0，存在bug
	int i = 0;
	int sz = sizeof(arr)/sizeof(arr[0]);
	for(i=1;i<sz;i++)
	{
		if(arr[i] > max)
		{
			max = arr[i];
		}
	}
	printf("max = %d\n",max);
    return 0;
}


    //求值，计算：1/1-1/2+1/3-1/4+1/5...+1/99-1/100=？
{
	int i = 0;
	double sum = 0;
	int flag = 1;
	for(i=1;i<=100;i++)
	{
		sum += flag*1.0/i;
		flag = -flag;
	}
	printf("%lf\n",sum);
return 0;
}



    //自己的土方法
{
	int a = 0;
	double jia = 0;
	double jian = 0;
	double sum = 0;
	for(a=1;a<=100;a++)
	{
		if(a%2==0)
		{
			jian = jian - 1.0/a;
		}
		else
		{
		    jia = jia + 1.0/a;
		}
	}
	//................//
	//for(a=1;a<=100;a+=2.0)
	//{ 
	//	jia = jia+1.0/a;
	//}
	//for(a=2;a<=100;a+=2.0)
	//{
	//	jian = jian-1.0/a;
	//}
	sum = jian + jia;
	printf("%lf\n",sum);
	return 0;
}




      //计算：1-100内数字里数字9的个数
{
	int i = 0;
    int count = 0;
	printf("1-100内数字9的个数:\n");
	for(i=1;i<=100;i++)
	{
		if(i%10 == 9)
		{
			count++;
		}
		if(i/10 == 9)
		{
		count++;
		}
	}
	printf("个数>%d\n",count);
return 0;
}



         //打印100-200内的素数
//i=a*b,a\b中至少有一个数字≤根号i，在开平方之前是否能找到一个数字
{
	int i = 0;
	int count = 0;
	printf("100-200内的素数:");  //打印100-200内的素数
	for(i=101;i<=200;i+=2)  //判断i是否为素数
	{                      //试除法，产生2→i-1个数
		int j = 0;
		for(j=2;j<sqrt(i);j++)
		{
			if(i%j == 0)
			{
				break;
			}
		}
	    if(j > sqrt(i))
		{
			printf("%d ",i);
			count++;
		}
	}
	printf("\n个数>%d\n",count);
	return 0;
}


      //打印100-200内的素数
{
	int i = 0;
	int count = 0;
	printf("100-200内的素数:");  //打印100-200内的素数
	for(i=100;i<=200;i++)  //判断i是否为素数
	{                      //试除法，产生2→i-1个数
		int j = 0;
		for(j=2;j<i;j++)
		{
			if(i%j == 0)
			{
				break;
			}
		}
	    if(j == i)
		{
			printf("%d ",i);
			count++;
		}
	}
	printf("\n个数>%d\n",count);
	return 0;
}




         //打印1000-2000内的闰年
	{         
	int year = 0;
	int count = 0;
	for(year = 1000;year<=2000;year++)
	{
	    if(((year%4==0) && (year%100!=0)) || (year%400==0))
		{
	    	printf("闰年>%d ",year);
	        count++;
		}
	}
	printf("\n年数>%d\n",count);
	return 0;
}




           //打印1000-2000内的闰年
{                 
	int year = 0;
	int count = 0;
	for(year = 1000;year<=2000;year++)
	{
		if(year%4==0 && year%100!=0)
		{
			printf("闰年>%d\n",year);
			count++;
		}
		else if(year % 400 == 0)
		{
			printf("闰年>%d\n",year);
			count++;
		}
	}
	printf("年数>%d\n",count);
	return 0;
}




       //1000-2000内能被4整除的数
{
	int i = 0;
	for(i=1000;i<2000;i++)
	{
		if(i%4 == 0)
			printf("闰年>%d\n",i);
	}
	return 0;
}



      //求两个数的最大公约数，用辗转相除法
{   
	int m = 0;
	int n = 0;
	int r = 0;
	printf("输入两个数->");
	scanf("%d%d",&m,&n);
	while(r = m%n)
	{
	    //r = m%n;
		m = n;
		n = r;
	}
	printf("最大公约数为>%d\n",n);
return 0;
}



              //打印1~100内3的倍数
int main()
{
	int i = 0;
	for(i=1;i<100;i++)
	{
		if(i % 3 == 0)   //取模，就是求余数
	   printf("%d\n",i);
	}
return 0;
}
